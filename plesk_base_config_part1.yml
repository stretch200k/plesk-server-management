---
- name: Install Plesk and configure system
  hosts: all
  become: yes
  tasks:

    # Install dependencies
    - name: Install curl, wget, and bash
      apt:
        name:
          - curl
          - wget
          - bash
        state: present
      when: ansible_os_family == "Debian"

    # Update apt package cache (necessary for following packages)
    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    # Ensure UFW is installed (if not already)
    - name: Install UFW (if not already installed)
      apt:
        name: ufw
        state: present
      when: ansible_os_family == "Debian"

    # Set the default outgoing policy to allow
    - name: Set the default outgoing policy to allow
      ufw:
        default: allow
        direction: outgoing
        state: enabled

    # Open necessary ports for services
    - name: Allow incoming connections to SSH (port 22)
      ufw:
        rule: allow
        name: OpenSSH
        proto: tcp
        port: 22

    - name: Allow incoming connections to FTP (port 21)
      ufw:
        rule: allow
        proto: tcp
        port: 21

    - name: Allow incoming connections to SMTP (port 25)
      ufw:
        rule: allow
        proto: tcp
        port: 25

    - name: Allow incoming connections to DNS (port 53)
      ufw:
        rule: allow
        proto: tcp
        port: 53

    - name: Allow incoming connections to DNS (port 53 UDP)
      ufw:
        rule: allow
        proto: udp
        port: 53

    - name: Allow incoming connections to HTTP (port 80)
      ufw:
        rule: allow
        name: 'http'
        proto: tcp
        port: 80

    - name: Allow incoming connections to POP3 (port 110)
      ufw:
        rule: allow
        proto: tcp
        port: 110

    - name: Allow incoming connections to Auth (port 113)
      ufw:
        rule: allow
        proto: tcp
        port: 113

    - name: Allow incoming connections to IMAP (port 143)
      ufw:
        rule: allow
        proto: tcp
        port: 143

    - name: Allow incoming connections to HTTPS (port 443)
      ufw:
        rule: allow
        name: 'https'
        proto: tcp
        port: 443

    - name: Allow incoming connections to SMTPS (port 465)
      ufw:
        rule: allow
        proto: tcp
        port: 465

    - name: Allow incoming connections to Mail submission (port 587)
      ufw:
        rule: allow
        proto: tcp
        port: 587

    - name: Allow incoming connections to FTPS (port 990)
      ufw:
        rule: allow
        proto: tcp
        port: 990

    - name: Allow incoming connections to IMAPS (port 993)
      ufw:
        rule: allow
        proto: tcp
        port: 993

    - name: Allow incoming connections to POP3S (port 995)
      ufw:
        rule: allow
        proto: tcp
        port: 995

    - name: Allow incoming connections to MySQL (port 3306)
      ufw:
        rule: allow
        proto: tcp
        port: 3306

    - name: Allow incoming connections to PostgreSQL (port 5432)
      ufw:
        rule: allow
        proto: tcp
        port: 5432

    - name: Allow incoming connections to Plesk HTTPS (port 8443)
      ufw:
        rule: allow
        proto: tcp
        port: 8443

    - name: Allow incoming connections to Autoinstaller (port 8447)
      ufw:
        rule: allow
        proto: tcp
        port: 8447

    - name: Allow incoming connections to Plesk HTTP (port 8880)
      ufw:
        rule: allow
        proto: tcp
        port: 8880

    # Grafana-specific ports (Grafana Web UI)
    - name: Allow incoming connections to Grafana (port 3000)
      ufw:
        rule: allow
        proto: tcp
        port: 3000

    # Prometheus node_exporter port
    - name: Allow incoming connections to node_exporter (port 9100)
      ufw:
        rule: allow
        proto: tcp
        port: 9100

    # Enable UFW to start on boot
    - name: Enable UFW to start on boot
      ufw:
        state: enabled
        logging: on

    - name: Enable UFW
      ufw:
        state: enabled

    # Check if Plesk is already installed
    - name: Check if Plesk is installed
      stat:
        path: /usr/local/plesk/version
      register: plesk_installed

    # Install Plesk using one-click installer if not already installed
    - name: Install Plesk using one-click installer
      shell: |
        bash -c "$(curl -fsSL https://autoinstall.plesk.com/one-click-installer || wget -qO- https://autoinstall.plesk.com/one-click-installer)"
      when: not plesk_installed.stat.exists
      args:
        creates: /usr/local/plesk/version
      tags: plesk
